class Date

  types  
    public Date = nat
       inv d == isValidDate(d div 10000, (d div 100) mod 100, d mod 100);

  values
		public minimumDate = makeDate(1,1,1);
		public maximumDate = makeDate(9999,12,31);
  functions
      
    public static isValidDate: nat * nat * nat -> bool
      isValidDate(year, month, day) ==
        year >= 1 and month >= 1 and month <= 12 and day >= 1 and day <= DaysOfMonth(year, month);
    
    public static IsLeapYear: nat -> bool
      IsLeapYear(year) == 
        year mod 4 = 0 and year mod 100 <> 0 or year mod 400 = 0;

    public static DaysOfMonth: nat * nat -> nat
      DaysOfMonth(year, month) == (
        cases month :
          1, 3, 5, 7, 8, 10, 12 -> 31,
          4, 6, 9, 11 -> 30,
          2 -> if IsLeapYear(year) then 29 else 28
        end
       )
      pre month >= 1 and month <= 12;

    public static makeDate: nat * nat * nat -> Date
      makeDate(year, month, day) == 
        year * 10000 + month * 100 + day
      pre isValidDate(year, month, day);
 
    public static getYear: Date -> nat
      getYear(d) == 
        d div 10000;
      
    public static getMonth: Date -> nat
      getMonth(d) == 
        (d div 100) mod 100;
      
    public static getDay: Date -> nat
      getDay(d) == 
        d mod 100;          

end Date