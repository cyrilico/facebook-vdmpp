class TestGroupChat is subclass of Test

instance variables
operations			
	-- Test scenario where users create chats with other users and communicate in it
	-- Covers the respective scenario described in section 2.1 and requirement R7
	protected testGroupChatCommunication: () ==> ()
		testGroupChatCommunication() == (
			facebook := Facebook`clearInstance();
			setupUsers();
			
			facebook.addUsers({u1,u2,u3,u4});
			-- setup some friendships
			facebook.addFriendship(u1,u2);
			facebook.addFriendship(u1,u3);
			facebook.addFriendship(u1,u4);
			facebook.addFriendship(u3,u4);
			
			u1.createGroupChat("i hate eclipse", {u2,u3});
			assertEqual(u1.getChatByName("i hate eclipse").getMembers(), {u1,u2,u3}); --3 starting members
			assertTrue(u1.getChatByName("i hate eclipse") = u2.getChatByName("i hate eclipse") and u2.getChatByName("i hate eclipse") = u3.getChatByName("i hate eclipse")); --same chat for every member
			
			u1.sendChatMessage("i hate eclipse", "hey guys, we have to do MFES", Date`makeDate(2018,12,22));
			u3.sendChatMessage("i hate eclipse", "well user4 is missing, so let me add him", Date`makeDate(2018,12,22));
			assertEqual(len u1.getChatByName("i hate eclipse").getMessagesBetween(nil, nil), 2); --2 messages in chat
			
			u3.addFriendToChat(u4, "i hate eclipse");
			assertTrue(u4 in set u3.getChatByName("i hate eclipse").getMembers());
			assertEqual(card u3.getChatByName("i hate eclipse").getMembers(), 4); --4 members now
			
			u3.sendChatMessage("i hate eclipse", "hey user4, MFES man, gotta do it", Date`makeDate(2018,12,23));
			u4.sendChatMessage("i hate eclipse", "nope, GL", Date`makeDate(2018,12,25));
			u2.sendChatMessage("i hate eclipse", "fine, then i won't do anything too", Date`makeDate(2018,12,26));
			u2.leaveGroupChat("i hate eclipse");
			
			assertEqual(len u1.getChatByName("i hate eclipse").getMessagesBetween(nil, nil), 5); --5 messages in chat now
			assertEqual(card u1.getChatByName("i hate eclipse").getMembers(), 3);
			assertTrue(u2 not in set u1.getChatByName("i hate eclipse").getMembers()); --u2 left the chat
			assertEqual(card u2.getChats(), 0); --u2 is no longer in any group chat
		);

	-- Test scenario where publications are looked up by their content
	-- Covers requirement R8
	protected testGroupChatSearchAndFilter: () ==> ()
		testGroupChatSearchAndFilter() == (
			facebook := Facebook`clearInstance();
			setupUsers();
		);
		
	public Run: () ==> ()
			Run() == (
				IO`println("Running GroupChat Tests\n");
				testGroupChatCommunication();
				testGroupChatSearchAndFilter();
				IO`println("GroupChat Tests ran successfully\n");
			);

end TestGroupChat