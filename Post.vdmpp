class Post
types
  public String = seq1 of char;
  public Date = Date`Date;
  -- Post visibility permissions:
  -- Public - Anyone can see
  -- Friends - Only author's friends can see
  -- FriendsOfFriends - Only author's friends and their friends can see
  -- TransitiveConnection - Anyone with some eventual connection to the author (i.e. friends set transitive closure) can see
  public Permissions = <Public> | <Friends> | <FriendsOfFriends> | <TransitiveConnection>
values
-- TODO Define values here
instance variables
  protected content: String;
  protected author: User;
  protected timestamp: Date;
  protected likes: set of User; --TODO: User can only like post if has permissions to it
  protected permissions: Permissions;
  
operations
  public Post: User * String * Date * Permissions ==> Post
      Post(PostAuthor, PostContent, PostTimestamp, PostPermissions) == (
        author := PostAuthor;
        content := PostContent;
        timestamp := PostTimestamp;
        likes := {};
        permissions := PostPermissions;
      )
      pre PostContent <> ""
      post author = PostAuthor and content = PostContent and timestamp = PostTimestamp and likes = {} and permissions = PostPermissions;
      
  
  pure public getAuthor: () ==> User
  		getAuthor() == return author
  		post RESULT = author;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Post